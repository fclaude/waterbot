name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  code-quality:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - run: python -m pip install --upgrade pip
      - run: pip install -r requirements.txt
      - run: pip install black isort flake8 mypy bandit safety
      - run: make format-check
      - run: make lint
      - run: make type-check || true
      - run: make security-check || true

  test-unit:
    runs-on: ubuntu-latest
    needs: code-quality
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - run: python -m pip install --upgrade pip
      - run: pip install -r requirements.txt
      - run: make test-cov
      - uses: codecov/codecov-action@v5
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}
      - uses: actions/upload-artifact@v4
        with:
          name: htmlcov
          path: htmlcov

  test-python-versions:
    runs-on: ubuntu-latest
    needs: code-quality
    strategy:
      matrix:
        python-version: ['3.11', '3.12']
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      - run: python -m pip install --upgrade pip
      - run: pip install -r requirements.txt
      - run: make test

  mr-check:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - run: python -m pip install --upgrade pip
      - run: pip install -r requirements.txt
      - run: pip install black isort flake8 mypy bandit safety
      - run: make dev-check
