# Simplified GitLab CI/CD Pipeline for WaterBot
# This version avoids common issues with missing templates and registry access

image: python:3.11-slim

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  OPERATION_MODE: "emulation"

cache:
  paths:
    - .cache/pip
    - .venv/

stages:
  - quality
  - test

before_script:
  - apt-get update -qq && apt-get install -y -qq git make
  - python --version
  - pip install --upgrade pip
  - python -m venv .venv
  - source .venv/bin/activate
  - pip install -r requirements.txt

# Code quality checks
code-quality:
  stage: quality
  script:
    - pip install black isort flake8 mypy bandit safety
    - make format-check
    - make lint
    - make type-check || true  # Allow type checking to fail
    - make security-check || true  # Allow security check to fail
  only:
    - main
    - merge_requests

# Unit testing
test-unit:
  stage: test
  script:
    - make test-cov
  coverage: '/TOTAL.*\s+(\d+%)$/'
  artifacts:
    when: always
    paths:
      - htmlcov/
    expire_in: 30 days
  only:
    - main
    - merge_requests

# Test on multiple Python versions
test-python-versions:
  stage: test
  parallel:
    matrix:
      - PYTHON_VERSION: ["3.9", "3.10", "3.11", "3.12"]
  image: python:${PYTHON_VERSION}-slim
  script:
    - make test
  only:
    - main
    - merge_requests

# Comprehensive check for merge requests
mr-check:
  stage: quality
  script:
    - pip install black isort flake8 mypy bandit safety
    - make dev-check
  only:
    - merge_requests
  except:
    - main
